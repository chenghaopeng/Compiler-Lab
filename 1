.data
_prompt: .asciiz "Enter an integer:"
v5: .space 4
t1: .space 4
v4: .space 4
t0: .space 4
v3: .space 4
v2: .space 4
v1: .space 4
v0: .space 4
_ret: .asciiz "\n"
.globl main
.text
read:
  li $v0, 4
  la $a0, _prompt
  syscall
  li $v0, 5
  syscall
  jr $ra

write:
  li $v0, 1
  syscall
  li $v0, 4
  la $a0, _ret
  syscall
  move $v0, $0
  jr $ra

mod:
  la $9, v0
  lw $8, 0($9)
  lw $10, 0($sp)
  addi $sp, $sp, 4
  lw $8, 0($sp)
  addi $sp, $sp, 4
  addi $sp, $sp, -4
  sw $10, 0($sp)
  la $9, v1
  lw $8, 0($9)
  lw $10, 0($sp)
  addi $sp, $sp, 4
  lw $8, 0($sp)
  addi $sp, $sp, 4
  addi $sp, $sp, -4
  sw $10, 0($sp)
  la $9, v0
  lw $8, 0($9)
  move $2, $8
  jr $ra

gcd:
  la $9, v2
  lw $8, 0($9)
  lw $10, 0($sp)
  addi $sp, $sp, 4
  lw $8, 0($sp)
  addi $sp, $sp, 4
  addi $sp, $sp, -4
  sw $10, 0($sp)
  la $9, v3
  lw $8, 0($9)
  lw $10, 0($sp)
  addi $sp, $sp, 4
  lw $8, 0($sp)
  addi $sp, $sp, 4
  addi $sp, $sp, -4
  sw $10, 0($sp)
  la $9, v2
  lw $8, 0($9)
  move $2, $8
  jr $ra

main:
  addi $sp, $sp, -4
  sw $ra, 0($sp)
  jal read
  lw $ra, 0($sp)
  addi $sp, $sp, 4
  la $9, t0
  lw $8, 0($9)
  move $8, $2
  la $10, t0
  sw $8, 0($10)
  la $9, v4
  lw $8, 0($9)
  la $11, t0
  lw $10, 0($11)
  move $8, $10
  la $12, v4
  sw $8, 0($12)
  addi $sp, $sp, -4
  sw $ra, 0($sp)
  jal read
  lw $ra, 0($sp)
  addi $sp, $sp, 4
  la $9, t1
  lw $8, 0($9)
  move $8, $2
  la $10, t1
  sw $8, 0($10)
  la $9, v5
  lw $8, 0($9)
  la $11, t1
  lw $10, 0($11)
  move $8, $10
  la $12, v5
  sw $8, 0($12)
  la $9, v4
  lw $8, 0($9)
  move $a0, $8
  addi $sp, $sp, -4
  sw $ra, 0($sp)
  jal write
  lw $ra, 0($sp)
  addi $sp, $sp, 4
  la $9, v5
  lw $8, 0($9)
  move $a0, $8
  addi $sp, $sp, -4
  sw $ra, 0($sp)
  jal write
  lw $ra, 0($sp)
  addi $sp, $sp, 4
  li $8, 0
  move $2, $8
  jr $ra

